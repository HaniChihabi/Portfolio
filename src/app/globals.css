@tailwind base;
@tailwind components;
@tailwind utilities;

.material-symbols-outlined {
  font-variation-settings:
  'FILL' 0,
  'wght' 400,
  'GRAD' 0,
  'opsz' 24;
  color: black;/*rgb(151, 147, 147)*/
}

.div{
    scroll-snap-type: y mandatory; /* y for vertical snapping */
    height: 100vh ;
    width: 100%;
    overflow-y: scroll; /* Allows scrolling */  
    background-color: rgb(251, 244, 231);   /*rgb(233, 209, 171)*/
    transition: ease 0.5s;
    scroll-behavior: smooth;
    scroll-snap-stop: always;
    font-family: 'Ephesis', cursive;
    font-family: 'Montserrat', sans-serif;
    font-family: 'Raleway', sans-serif;
    font-family: 'Russo One', sans-serif;
}

/*nav*/
.menuBar {
  position: fixed;
  top: 35px;
  left: 30px;
  width: 100%;
  background-color: transparent; /* Change as per your design */
  display: flex;
  justify-content: space-around;
  align-items: center;
  padding: 15px  0;
  z-index: 1000; /* Ensures the menu bar stays above other content */
}
.menuIcon {
  display: block; /* Replace with inline-block if using icons */
  width: 100px; /* Adjust size accordingly if using icons */
  height: 100px; /* Adjust size accordingly if using icons */
  text-decoration: none;
}
.menuIcon:hover {
  background-color: transparent;
  cursor: pointer;
  background-color: white;
  border-radius: 20px;
}

.menuBar span {
  padding: 10px 20px;
  font-size: 30px;
  
}
.menuIcon:hover {
  background-color: transparent;
  cursor: pointer;
  background-color: white;
  border-radius: 20px;
}




section{
    display: flex; /* Establishes a flex container */
    justify-content: center; /* Centers content along the main axis (horizontally) */
    align-items: center; /* Centers content along the cross axis (vertically) */
    height: 100vh ;
    width: 100% ;
    scroll-snap-align: start;
    text-align: center; /* Centers text within the content (if there's more than one line of text) */
    color: black;
    scroll-snap-stop: always;
    
}
.screen{
    display: flex; /* Establishes a flex container */
    justify-content: center; /* Centers content along the main axis (horizontally) */
    align-items: center; /* Centers content along the cross axis (vertically) */
    width: 1700px;
    height: 850px;
    border-radius: 90px;
}



/*sec1*/
.sec1-block{
    display: block;
    text-align: left;
}

.sec1-block .block1{
  background-color: rgb(255, 245, 230);
  font-size: 200px;
   line-height: 170px;  
   animation: backInUp;
   animation-duration: 1s;
   padding: 50px;
}

.sec1-block .block2{
  font-size: 100px;
  line-height: 50px; 
  text-align: center; 
  animation: backInDown;
  animation-duration: 1s;
  background-color: rgb(255, 245, 230);
  padding: 0px;
  border-radius: 50px;
}



/*sec2*/
.sec2-block {
  display: block;
  position: relative;
  top: 350px;
  height: 100%; /* Full height of the parent */
  width: 100%; /* Full width of the parent */
  animation: shakeX;
  animation-iteration-count: infinite;
  animation-duration: 5s;
}

.sec2-block1 h2 {
  font-size: 100px;
  text-align: center; /* Ensures the text is centered */
  /* Additional styling as needed */
}
.sec2-block2 span{
  font-size: 100px;
  line-height: 50px;  
  position: relative;
  top: 210px;
}

.sec2-text{
  font-size: 50px;
  line-height: 70px;
}



/* Styles for .hover-trigger */
.hover-trigger {
  position: fixed;
  width: 100vw;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Styles for h1 inside .hover-trigger */
.hover-trigger{
  position: absolute;
  top: 50%; /* Initially centered */
  left: 50%;
  transform: translate(-50%, -50%);
  transition: top 0.3s ease;
  font-size: 90px;
}

/* Styles for .bullet-points */
.hover-trigger .bullet-points {
  opacity: 0; /* Initially hidden */
  transition: opacity 0.3s ease 0.3s; 
  position: absolute;
  top: 60%; 
  left: 50%;
  transform: translateX(-50%);
  width: 100%; 
  font-size: 20px;
}

/* Hover Styles */
.hover-trigger:hover{
  top: 15%; /* Move h1 to the top */
}

.hover-trigger:hover .bullet-points, li{
  opacity: 1; /* Show bullet points */
  
}

.hover-trigger:hover .bullet-points li{
  position: relative;
  top: 50px;
  font-size: 30px;
  margin: 100px;
}
li {
  transition: transform 0.3s ease; /* Smooth transition for the transform */
}

li:hover {
  transform: scale(1.3); /* Scales up the list item by 10% */
  color: rgb(210, 198, 181);
}


.hover-text {
  display: none;  transition: opacity 0.5s ease;
  padding: 50px;
}

li:hover .default-text {
  display: none;  

}

li:hover .hover-text {
  display: inline;
}







/*sec3*/
.sec3-block{
  display:contents;
}


.service1, .service2, .service3 {
  flex: 1; /* Each service takes equal space */
  text-align: left; 
  height: 550px;
  max-width: 350px;
  margin: 50px;
  border-radius: 50px;
  background-color: white !important;
}

.service1:hover, .service2:hover, .service3:hover {
  transform: scale(1.05); /* Slightly enlarge the divs */
  box-shadow: 0px 0px 10px 0px rgb(216, 215, 215); /* Add a subtle shadow */
  transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transition for hover effect */
}

.sec3-block h1{
  margin: 50px 0px 30px 50px;
  font-size: 25px;
}

.sec3-block p{
  margin: 10px 50px;
}
.sec3-block h2{
  margin: 30px 0px 50px 50px;
  font-size: 18px;
  color: purple;
  cursor: pointer;
}


/*sec4*/
.sec4-block{
  display: block;
  position:relative;    
  width: 1000px;
  
}


/*sec5*/
.sec5-block {
  display: block; /* Display divs side by side */
  justify-content: center;
  align-items: center;
}

.sec5-block h1, a{
  display: block; /* Display divs side by side */
  justify-content: center;
  align-items: center;

}

.sec5-block .link {
  position: relative; /* Needed for absolute positioning of the overlay */
  bottom: 50px;
  height: 100px; /* Set your desired height */
  margin: 10px; /* Space between divs */
  background-color: transparent;

}

.sec5-block .link h1, .link a{
  font-size: 100px;
  width: 1500px;
  line-height: 200px;
  margin: 100px;
}

.link .overlay {
  padding: 100px;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7); /* Semi-transparent overlay */
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none; /* Prevents overlay from blocking clicks */
}

.link:hover .overlay {
  opacity: 1;
  pointer-events: auto; /* Allows interaction with the overlay */

}




  /* slider */
  .slider {
    width: 1500px;
    height: 700px;
    text-align: center;
    overflow: hidden;
  }
  .slides {
    display: flex;  
    overflow-x: auto;
    overflow-y: hidden;
    scroll-snap-type:x mandatory;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
  }
  .slides::-webkit-scrollbar-thumb {
    background: black;
    border-radius: 10px;
  }
  .slides::-webkit-scrollbar-track {
    background: transparent;
  }
  .slides > div {
    scroll-snap-align: start;
    flex-shrink: 0;
    width: 1700px;
    height: 850px;
    margin-right: 50px;
    border-radius: 90px;
    transform-origin: center center;
    transform: scale(1);
    transition: transform 0.5s;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 100px;
  }
  .slides > div:target {
    transform: scale(0.8); 
  }
  .author-info {
    background: rgba(0, 0, 0, 0.75);
    color: white;
    padding: 0.75rem;
    text-align: center;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    margin: 0;
  }  
  .slider > a {
    display: inline-flex;
    width: 3.5rem;
    height: 1.5rem;
    background: white;
    text-decoration: none;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    margin: 0 0 0.5rem 0;
    position: relative;
  }
  .slider > a:active {
    top: 1px;
  }
  .slider > a:focus {
    background: #000;
  }


  /* Arrow */   
  .container{
    animation: shakeY ;
    animation-duration: 5s;
    animation-iteration-count: infinite;
  }
  .arrow {
    display: flex;
    justify-content: center;
    height: 5vw;
    width: 5vw;
    border-style: solid;
    border-color: rgb(251, 244, 231);;
    border-width: 0px 10px 10px 0px;
    transform: rotate(45deg);
    transition: border-width 150ms ease-in-out;
    
    
  }  
  .arrow:hover {
    border-bottom-width: 4px;
    border-right-width: 4px;
  }

  

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

.active-color {
  /* This will be overridden by inline styles */
  color: inherit;
}
.icon.active {
  color: green;
}

.github, .gmail, .linkedin {
  width: 100%;
}
.github, .gmail, .linkedin h1{
  font-size: 100px;
}


.icon.active {
  background-color: white;
  border-radius: 20px;
  /* Add any other styles you want for the active state */
}








.sliderr{
	width: 1250px; /*Same as width of the large image*/
	position: relative;
  top: 30px;
	padding-top: 440px; /*That helps bring the labels down*/
	margin: 100px auto;
}


/*Last thing remaining is to add transitions*/
.sliderr>img{
	position: absolute;
	left: 0; top: 0;
	transition: all 0.5s;
  border-radius: 0%;
}

.sliderr input[name='slide_switch'] {
	display: none;
}

.sliderr label {
	/*Lets add some spacing for the thumbnails*/
	margin: 320px 50px 0px 0px;
	float: left;
	cursor: pointer;
	transition: all 0.5s;
	
	/*Default style = low opacity*/
	opacity: 0.6;
}

.sliderr label img{
	display: block;
  border-radius: 100%;
  position: relative;
  left: 35px;
}

/*Time to add the click effects*/
.sliderr input[name='slide_switch']:checked+label {
	border-color: #666;
	opacity: 1;
}

.sliderr input[name='slide_switch'] ~ img {
	opacity: 0;
	transform: scale(1.1);
}

.sliderr input[name='slide_switch']:checked+label+img {
	opacity: 1;
	transform: scale(1);}